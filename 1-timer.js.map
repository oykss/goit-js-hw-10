{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputDate = document.getElementById('datetime-picker');\nconst buttonStart = document.querySelector('[type=\"button\"]');\nconst spanList = document.querySelectorAll('.value');\n\nlet timeInput = 0;\n\nflatpickr(inputDate, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    timeInput = selectedDates[0];\n    if (timeInput.getTime() - new Date().getTime() > 1) {\n      buttonStart.classList.add('timer-btn-active');\n    } else {\n      buttonStart.classList.remove('timer-btn-active');\n\n      iziToast.error({\n        title: 'Error',\n        titleColor: '#fff',\n        titleSize: '16px',\n        titleLineHeight: 1.5,\n        message: 'Please choose a date in the future',\n        messageSize: '16px',\n        messageLineHeight: 1.5,\n        messageColor: '#fff',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        closeOnEscape: true,\n        iconUrl: 'bi_x-octagon.svg',\n        timeout: 3000,\n        theme: 'dark',\n      });\n    }\n  },\n});\n\nbuttonStart.addEventListener('click', () => {\n  inputDate.classList.add('timer-input-unactive');\n  buttonStart.classList.remove('timer-btn-active');\n  startTimer();\n});\n\nfunction startTimer() {\n  const timer = setInterval(() => {\n    const timeLeft = timeInput - new Date().getTime();\n\n    if (timeLeft <= 0) {\n      clearInterval(timer);\n      inputDate.classList.remove('timer-input-unactive');\n      return;\n    }\n\n    const timeObj = Object.values(convertMs(timeLeft));\n\n    spanList.forEach((span, index) => {\n      span.textContent = addLeadingZero(timeObj[index]);\n    });\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["inputDate","buttonStart","spanList","timeInput","flatpickr","selectedDates","iziToast","startTimer","timer","timeLeft","timeObj","convertMs","span","index","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAKA,MAAMA,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAc,SAAS,cAAc,iBAAiB,EACtDC,EAAW,SAAS,iBAAiB,QAAQ,EAEnD,IAAIC,EAAY,EAEhBC,EAAUJ,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQK,EAAe,CACrBF,EAAYE,EAAc,CAAC,EACvBF,EAAU,UAAY,IAAI,KAAI,EAAG,QAAS,EAAG,EAC/CF,EAAY,UAAU,IAAI,kBAAkB,GAE5CA,EAAY,UAAU,OAAO,kBAAkB,EAE/CK,EAAS,MAAM,CACb,MAAO,QACP,WAAY,OACZ,UAAW,OACX,gBAAiB,IACjB,QAAS,qCACT,YAAa,OACb,kBAAmB,IACnB,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,cAAe,GACf,QAAS,mBACT,QAAS,IACT,MAAO,MACf,CAAO,EAEJ,CACH,CAAC,EAEDL,EAAY,iBAAiB,QAAS,IAAM,CAC1CD,EAAU,UAAU,IAAI,sBAAsB,EAC9CC,EAAY,UAAU,OAAO,kBAAkB,EAC/CM,GACF,CAAC,EAED,SAASA,GAAa,CACpB,MAAMC,EAAQ,YAAY,IAAM,CAC9B,MAAMC,EAAWN,EAAY,IAAI,KAAM,EAAC,QAAO,EAE/C,GAAIM,GAAY,EAAG,CACjB,cAAcD,CAAK,EACnBR,EAAU,UAAU,OAAO,sBAAsB,EACjD,MACD,CAED,MAAMU,EAAU,OAAO,OAAOC,EAAUF,CAAQ,CAAC,EAEjDP,EAAS,QAAQ,CAACU,EAAMC,IAAU,CAChCD,EAAK,YAAcE,EAAeJ,EAAQG,CAAK,CAAC,CACtD,CAAK,CACF,EAAE,GAAI,CACT,CAEA,SAASF,EAAUI,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}